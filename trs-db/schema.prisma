datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client"
  output   = "./generated/prisma"
}

enum TreatReturnApplicationStatus {
  IN_REVIEW
  APPROVED
  REJECTED
}

model TreatReturnApplication {
  id Int @id @default(autoincrement())
  // A short, unique alpha-numeric identifier for this application.
  ticketId                 String                       @unique
  // The status of this application.
  status                   TreatReturnApplicationStatus
  // The rendered PDF file content.
  renderedPdf              Bytes
  // The start time of the audit appointment time slot, if an appointment has been made for this application.
  auditAppointmentTimeSlot DateTime?

  // The associated print jobs. Applications can be printed more than once.
  printJobs PrintJob[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Fields related to the final responses.
  costume_name String?
  school_year String?
  street_names String?
  collected_candy_weight_lbs Float?
  received_tips_percent Float?
  ptp_invested_percent Float?
  reit_invested_percent Float?
  candy_to_be_used_for_film Boolean?
  candy_was_gained_from_crime Boolean?
  already_submitted_1040tres Boolean?
  reimbursed_for_dental Boolean?
  will_save_candy_to_eoy Boolean?
}

enum PrintJobStatus {
  UNSTARTED
  STARTED
  COMPLETED
}

model PrintJob {
  id Int @id @default(autoincrement())

  // The print job's status.
  status                   PrintJobStatus
  // The application to be printed.
  treatReturnApplicationId Int
  treatReturnApplication   TreatReturnApplication @relation(fields: [treatReturnApplicationId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
